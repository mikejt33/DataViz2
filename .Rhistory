addPolygons(
fillColor = ~pal(states$percentagegrowth),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE
),
label = labels
) %>%
addLegend(
pal = pal,
values = ~states$percentagegrowth,
opacity = 0.7,
title="Pop Growth 2010-2017 ",
position = "topleft")
m %>%
addPolygons(
fillColor = ~pal(states$percentagegrowth),
weight = 2,
opacity = 1,
color = "black",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 3,
color = "black",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE)
) %>%
addLegend(
pal = pal,
values = ~states$percentagegrowth,
opacity = 0.5,
title="Pop Growth 2010-2017 Increase",
position = "topleft")
bins <-c(0, seq(1, 1.5,.1), Inf)
pal <- colorBin("Blues", domain = states$percentagegrowth, bins = bins)
m %>%
addPolygons(
fillColor = ~pal(states$percentagegrowth),
weight = 2,
opacity = 0.9,
color = "black",
dashArray = "3",
fillOpacity = 0.75) %>%
addLegend(
pal = pal,
values = ~states$percentagegrowth,
opacity = 0.75,
title="Pop Growth 2010-2017 Increase",
position = "topleft",
labFormat = labelFormat(suffix = "%"))
m %>%
addPolygons(
fillColor = ~pal(states$percentagegrowth),
weight = 2,
opacity = 1,
color = "black",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 3,
color = "black",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE)
) %>%
addLegend(
pal = pal,
values = ~states$percentagegrowth,
opacity = 0.5,
title="Pop Growth 2010-2017 Increase",
position = "topleft")
labels <- sprintf(
"<strong>%s</strong><br/>%g%%",
states$NAME, states$percentagegrowth
) %>% lapply(htmltools::HTML)
m %>%
addPolygons(
fillColor = ~pal(states$percentagegrowth),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE
),
label = labels
) %>%
addLegend(
pal = pal,
values = ~states$percentagegrowth,
opacity = 0.7,
title="Pop Growth 2010-2017 ",
position = "topleft")
p <- ggplot()
p <- p + geom_polygon(data=map, aes(x=long, y=lat, group = group, fill=map$rate),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar") +
labs(fill = "Murder Rate Percentage", title = "Murder Rate per State in 2010",
caption = "Source: Murders dataset from DSlabs package")
p
p <- ggplot()
p <- p + geom_polygon(data=map, aes(x=long, y=lat, group = group, fill=map$rate),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar") +
labs(fill = "Murder Rate %", title = "Murder Rate per State in 2010",
caption = "Source: Murders dataset from DSlabs package")
p
library(ggmap)
murder.rate <- murder %>%
mutate(
rate = total/population * 100
) %>%
mutate(
region = tolower(state)
)
statesMap <- map_data('state')
#ggplot(statesMap, aes(x=long, y=lat, group=group)) + geom_polygon(fill='white', color='black')
map <- merge(statesMap,murder.rate, by = "region")
p <- ggplot()
p <- p + geom_polygon(data=map, aes(x=long, y=lat, group = group, fill=map$rate),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar") +
labs(fill = "Murder Rate %", title = "Murder Rate per State in 2010",
caption = "Source: Murders dataset from DSlabs package")
p
disease.2010 <- disease%>%
filter(year == 2010 & !is.na(population)) %>%
mutate(rate = count / population * 10000 * 52 / weeks_reporting)
head(disease.2010)
disease.2010 <- disease%>%
filter(year == 2010 & !is.na(population)) %>%
mutate(rate = count / population * 100)
head(disease.2010)
library(ggmap)
murder.rate <- murder %>%
mutate(
rate = total/population * 100000
) %>%
mutate(
region = tolower(state)
)
statesMap <- map_data('state')
#ggplot(statesMap, aes(x=long, y=lat, group=group)) + geom_polygon(fill='white', color='black')
map <- merge(statesMap,murder.rate, by = "region")
p <- ggplot()
p <- p + geom_polygon(data=map, aes(x=long, y=lat, group = group, fill=map$rate),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar") +
labs(fill = "Murder Rate Rate", title = "Murder Rate per State in 2010",
caption = "Source: Murders dataset from DSlabs package")
p
library(ggmap)
murder.rate <- murder %>%
mutate(
rate = total/population * 100000
) %>%
mutate(
region = tolower(state)
)
statesMap <- map_data('state')
#ggplot(statesMap, aes(x=long, y=lat, group=group)) + geom_polygon(fill='white', color='black')
map <- merge(statesMap,murder.rate, by = "region")
p <- ggplot()
p <- p + geom_polygon(data=map, aes(x=long, y=lat, group = group, fill=map$rate),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar") +
labs(fill = "Murder Rate", title = "Murder Rate per 100,000 people per State in 2010",
caption = "Source: Murders dataset from DSlabs package")
p
disease.2010 <- disease%>%
filter(year == 2010 & !is.na(population)) %>%
mutate(rate = rate = count / population * 10000 * 52 / weeks_reporting)
disease.2010 <- disease%>%
filter(year == 2010 & !is.na(population)) %>%
mutate(rate = count / population * 10000 * 52 / weeks_reporting)
head(disease.2010)
disease.2010 <- disease%>%
filter(year == 2010 & !is.na(population)) %>%
group_by(disease)%>%
mutate(rate = count / population * 10000 * 52 / weeks_reporting)
head(disease.2010)
unique(disease.2010$disease)
disease.2010 <- disease%>%
filter(year == 2010 & !is.na(population)) %>%
group_by(disease)
disease.2010
disease.2010 <- disease%>%
filter(year == 2010 & !is.na(population)) %>%
group_by(disease) %>%
unique(disease.2010$disease)
disease.2010 <- disease%>%
filter(year == 2010 & !is.na(population)) %>%
group_by(disease) %>%
unique(disease.2010$disease)
unique(disease.2010$disease)
Hepatitis <-  disease %>%
filter(year == 2010 & !is.na(population) & disease == "Hepatitis A")
Hepatitis
Hepatitis <-  disease %>%
filter(year == 2010 & !is.na(population) & disease == "Hepatitis A") %>%
summarise(cnt = sum(count),
pop = sum(population))%>%
mutate(rate = cnt/pop * 100000)
Hepatitis
unique(disease.2010$disease)
Measles<-  disease %>%
filter(year == 2010 & !is.na(population) & disease == "Measles") %>%
summarise(cnt = sum(count),
pop = sum(population))%>%
mutate(rate = cnt/pop * 100000)
Measles<-  disease %>%
filter(year == 2010 & !is.na(population) & disease == "Measles") %>%
summarise(cnt = sum(count),
pop = sum(population))%>%
mutate(rate = cnt/pop * 100000)
Mumps<-  disease %>%
filter(year == 2010 & !is.na(population) & disease == "Mumps") %>%
summarise(cnt = sum(count),
pop = sum(population))%>%
mutate(rate = cnt/pop * 100000)
Pertussis<-  disease %>%
filter(year == 2010 & !is.na(population) & disease == "Pertussis") %>%
summarise(cnt = sum(count),
pop = sum(population))%>%
mutate(rate = cnt/pop * 100000)
Polio<-  disease %>%
filter(year == 2010 & !is.na(population) & disease == "Polio") %>%
summarise(cnt = sum(count),
pop = sum(population))%>%
mutate(rate = cnt/pop * 100000)
Rubella<-  disease %>%
filter(year == 2010 & !is.na(population) & disease == "Rubella") %>%
summarise(cnt = sum(count),
pop = sum(population))%>%
mutate(rate = cnt/pop * 100000)
Smallpox<-  disease %>%
filter(year == 2010 & !is.na(population) & disease == "Smallpox") %>%
summarise(cnt = sum(count),
pop = sum(population))%>%
mutate(rate = cnt/pop * 100000)
Smallpox
Smallpox
Polio
Pertussis
Mumps
Measles
Hepatitis
Hepatitis <-  disease %>%
filter(year == 2010 & !is.na(population) & disease == "Hepatitis A")
p <- ggplot(Hepatitis, aes(x = count, y= population)) + geom_boxplot()
p
p <- ggplot(Hepatitis, aes(x = population, y= count)) + geom_boxplot()
p
p <- ggplot(Hepatitis, aes(x = state, y= count)) + geom_boxplot()
p
Hepatitis <-  disease %>%
filter(year == 2010 & !is.na(population) & disease == "Hepatitis A")
p <- ggplot(Hepatitis, aes(x = state, y= count)) + geom_boxplot()
p
disease.2010 <- disease%>%
filter(year == 2010 & !is.na(population))
head(disease.2010)
p <- ggplot(data = disease.2010, aes(disease,count))
p + geom_boxplot()
p
p <-
ggplot(data = disease.2010, aes(disease,count)) + geom_boxplot()
ggplot(data = disease.2010, aes(disease,count)) + geom_boxplot()
disease.2010 <- disease%>%
filter(year == 2010 & !is.na(population)) %>%
mutate(
rate = count/population * 100000
)
ggplot(data = disease.2010, aes(disease,rate)) + geom_boxplot()
ggplot(data = disease.2010, aes(disease,rate)) + geom_boxplot()
head(murder)
head(murder.rate)
total <- merge(disease.2010,murder.rate,by = region)
head(disease.2010)
total <- merge(disease.2010,murder.rate,by = state)
head()
head(disease.2010)
head(murder.rate)
total <- merge(disease.2010,murder.rate,by = "state")
ggplot(data = total, aes(disease,rate)) + geom_boxplot() + coord_flip()
head(total)
ggplot(data = disease.2010, aes(disease,rate)) + geom_boxplot() + coord_flip()
disease.2010
ggplot(data = disease.2010, aes(disease,rate)) + geom_boxplot() + coord_flip()
dim(murder.rate)
dim(disease.2010)
murder.rate %>% slice(rep(row_number(), 3))
dim(murder.rate)
murder.rate <- murder.rate %>% slice(rep(row_number(), 3))
dim(murder.rate)
total <- merge(disease.2010,murder.rate,by = "state")
head(total)
murder.rate <- murder.rate %>%
mutate(
disease = "murder"
)
murder.rate
murder.rate <- murder %>%
mutate(
rate = total/population * 100000
) %>%
mutate(
region = tolower(state)
)
murder.rate <- murder.rate %>%
mutate(
disease = "murder"
)
murder.rate
total <- merge(disease.2010,murder.rate,by = "state")
total
murder.rate
head(disease.2010)
head(murder.rate)
murder.rate <- murder.rate %>%
mutate(
disease = "murder",
count = total
)
murder.rate <- murder.rate %>%
mutate(
disease = "murder",
count = total
)
disease.2010 <- disease%>%
filter(year == 2010 & !is.na(population)) %>%
mutate(
rate = count/population * 100000
)
head(disease.2010)
head(murder.rate)
murder.rate <- murder.rate %>%
select(-abb)%>%
mutate(
disease = "murder",
count = total
)
murder.rate
head(murder.rate)
head(disease.2010)
disease.2010 <- disease%>%
select(-weeks_reporting,-year) %>%
filter(year == 2010 & !is.na(population)) %>%
mutate(
rate = count/population * 100000
)
disease.2010 <- disease%>%
select(-weeks_reporting,-year) %>%
filter(year == 2010 & !is.na(population)) %>%
mutate(
rate = count/population * 100000
)
disease.2010
murder.rate <- murder.rate %>%
select(-abb, -region)%>%
mutate(
disease = "murder",
count = total
)
disease.2010 <- disease%>%
select(-weeks_reporting) %>%
select(-year)%>%
filter(year == 2010 & !is.na(population)) %>%
mutate(
rate = count/population * 100000
)
head(disease.2010)
disease.2010 <- disease%>%
select(-weeks_reporting) %>%
filter(year == 2010 & !is.na(population)) %>%
select(-year)%>%
mutate(
rate = count/population * 100000
)
murder.rate <- murder.rate %>%
select(-abb, -region)%>%
mutate(
disease = "murder",
count = total
)
head(murder.rate)
murder.rate <- murder %>%
mutate(
rate = total/population * 100000
) %>%
mutate(
region = tolower(state)
)
murder.rate <- murder.rate %>%
select(-abb, -region)%>%
mutate(
disease = "murder",
count = total
)
head(murder.rate)
disease.2010 <- disease%>%
select(-weeks_reporting) %>%
filter(year == 2010 & !is.na(population)) %>%
select(-year)%>%
mutate(
rate = count/population * 100000
)
head(disease.2010)
total <- merge(disease.2010,murder.rate)
total
total <- rbind(disease.2010,murder.rate)
head(murder.rate)
head(disease.2010)
disease.2010 <- disease%>%
select(disease,state,count,population,rate) %>%
filter(year == 2010 & !is.na(population)) %>%
select(-year)%>%
mutate(
rate = count/population * 100000
)
View(murder.rate)
disease.2010 <- disease.2010[c("disease", "state", "count","population","rate")]
murder.rate <-
murder.rate <- murder.rate[c("disease", "state", "count","population","rate")]
total <- rbind(disease.2010,murder.rate)
total
ggplot(data = total, aes(disease,rate)) + geom_boxplot() + coord_flip()
ggplot(data = total, aes(disease,rate)) + geom_boxplot() + coord_flip()
ggplot(data = total, aes(disease,rate)) + geom_boxplot()
ggplot(data = total, aes(disease,rate)) + geom_boxplot() + labs(title = "Distribution of Diseases and Murder in 2010",
xlab="Disease (Including Murder",
ylab="Rate - Out of 100,000 people")
ggplot(data = total, aes(disease,rate)) + geom_boxplot() + labs(title = "Distribution of Diseases and Murder in 2010",
xlab="Disease (Including Murder",
ylab="Rate - Out of 100,000 people") +
coord_flip()
ggplot(data = total, aes(disease,rate)) + geom_boxplot() + labs(title = "Distribution of Diseases and Murder in 2010",
x="Disease (Including Murder",
y="Rate - Out of 100,000 people") +
coord_flip()
murder.rate <- murder.rate %>%
select(-abb, -region)%>%
mutate(
disease = "Murder",
count = total
)
murder.rate <- murder %>%
mutate(
rate = total/population * 100000
) %>%
mutate(
region = tolower(state)
)
murder.rate <- murder.rate %>%
select(-abb, -region)%>%
mutate(
disease = "Murder",
count = total
)
murder.rate <- murder.rate[c("disease", "state", "count","population","rate")]
total <- rbind(disease.2010,murder.rate)
ggplot(data = total, aes(disease,rate)) + geom_boxplot() + labs(title = "Distribution of Diseases and Murder in 2010",
x="Disease (Including Murder",
y="Rate - Out of 100,000 people") +
coord_flip()
ggplot(data = total, aes(disease,rate)) + geom_boxplot() + labs(title = "Distribution of Diseases and Murder in 2010",
x="Disease (Including Murder",
y="Rate - Out of 100,000 people") +
coord_flip()
ggplot(data = total, aes(disease,rate, color = disease)) + geom_boxplot() + labs(title = "Distribution of Diseases and Murder in 2010",
x="Disease (Including Murder",
y="Rate - Out of 100,000 people") +
coord_flip()
library(ggmap)
murder.rate <- murder %>%
mutate(
rate = total/population * 100000
) %>%
mutate(
region = tolower(state)
)
statesMap <- map_data('state')
#ggplot(statesMap, aes(x=long, y=lat, group=group)) + geom_polygon(fill='white', color='black')
map <- merge(statesMap,murder.rate, by = "region")
p <- ggplot()
p <- p + geom_polygon(data=map, aes(x=long, y=lat, group = group, fill=map$rate),colour="white"
) + scale_fill_continuous(low = "thistle2", high = "darkred", guide="colorbar") +
labs(fill = "Murder Rate", title = "Murder Rate per 100,000 people of Mainland US in 2010",
caption = "Source: Murders dataset from DSlabs package")
p
p
shiny::runApp('Desktop/DataViz2')
runApp('Desktop/DataViz2')
rsconnect::setAccountInfo(name='flights', token='16B328120B8DE3AE3956E0DA7F58B9CD', secret='acgJsYnO9W24+Gio5mtG8PAPjcZ4zxn2z1FRAqH6')
runApp('Desktop/DataViz2')
rsconnect::setAccountInfo(name='flights', token='16B328120B8DE3AE3956E0DA7F58B9CD', secret='acgJsYnO9W24+Gio5mtG8PAPjcZ4zxn2z1FRAqH6')
runApp('Desktop/DataViz2')
getwd()
setwd("Desktop/DataViz2")
rsconnect::deployApp(appDir = getwd())
runApp()
runApp('dashboard.R')
